@{
    Layout = "~/Templates/Layouts/_DefaultLayout.cshtml";
    Page.Title = "Projects";

    Database db = Database.Open("DatabaseConnector");
    var result = db.Query("SELECT * FROM Projects");
    string wantedType;

    try
    {
        wantedType = Request.QueryString["type"].ToString();
    }
    catch (Exception) {
        wantedType = "";
    }

    List<Project> projects = new List<Project>();

    foreach (var resultItem in result)
    {
        Project project = new Project();
        project.Id = resultItem.Id.ToString();
        project.Title = resultItem.Title;
        project.Description = resultItem.Description;
        project.Url = resultItem.Url;
        project.ImageDesktop = resultItem.ImageDesktop;
        project.ImageMobile = resultItem.ImageMobile;
        project.Type = resultItem.Type;
        project.Tags = resultItem.Tags;
        project.DevelopmentState = resultItem.DevelopmentState;
        project.SupportedPlatforms = resultItem.SupportedPlatforms;
        project.LivePreviewEnabled = resultItem.LivePreviewEnabled;
        projects.Add(project);
    }
}

<article class="text-section">
    <h2 class="label">Projects</h2>
    <p class="text">Jsem bývalým studentem střední průmyslové školy Preslova (obor Informačních technologií) a o tvorbu webů se zajímám od roku 2008. Za tu dobu už jsem vytvořil několik zajímavých projektů, z toho každý mne posunul zas o kousek dále v oblasti tvorby webových stránek a aplikací. Kromě toho se okrajově zajímám o focení a dříve také o tvorbu článků z oboru IT.</p>
</article>

<nav class="filter">
    <a onclick="listType()" data-type="all">All</a>
    <a onclick="listType('nativeapp')" data-type="nativeapp">Apps</a>
    <a onclick="listType('webapp')" data-type="webapp">Websites</a>
    <a onclick="listType('other')" data-type="other">Other</a>
</nav>

<article class="grid-section filter-type type-nativeapp">
    <h2 class="label">Apps</h2>
    <div class="grid">
        @{
            foreach (var project in projects)
            {
                if (project.Type == "nativeapp")
                {
                    string id = project.Id;
                    string title = project.Title;
                    string description = project.Description;
                    string imageUrl = (string.IsNullOrEmpty(project.ImageDesktop)) ? project.ImageDesktop : project.ImageMobile;

                    <a class="item" href="~/ProjectDetail.cshtml?id=@id">
                        <h3>@title</h3>
                        <div class="image preserve-ratio" data-ratio="0.7" data-ratioM="0.5" style="background-image: url('@imageUrl')"></div>
                        <div class="description">@description</div>
                    </a>
                }
            }
        }
    </div>
</article>

<article class="grid-section filter-type type-webapp">
    <h2 class="label">Websites</h2>
    <div class="grid">
        @{
            foreach (var project in projects)
            {
                if (project.Type == "webapp")
                {
                    string id = project.Id;
                    string title = project.Title;
                    string description = project.Description;
                    string imageUrl = (string.IsNullOrEmpty(project.ImageDesktop)) ? project.ImageDesktop : project.ImageMobile;

                    <a class="item" href="~/ProjectDetail.cshtml?id=@id">
                        <h3>@title</h3>
                        <div class="image preserve-ratio" data-ratio="0.7" data-ratioM="0.5" style="background-image: url('@imageUrl')"></div>
                        <div class="description">@description</div>
                    </a>
                }
            }
        }
    </div>
</article>

<article class="grid-section filter-type type-other">
    <h2 class="label">Other projects</h2>
    <div class="grid">
        @{
            foreach (var project in projects)
            {
                if (project.Type == "other")
                {
                    string id = project.Id;
                    string title = project.Title;
                    string description = project.Description;
                    string imageUrl = (string.IsNullOrEmpty(project.ImageDesktop)) ? project.ImageDesktop : project.ImageMobile;

                    <a class="item" href="~/ProjectDetail.cshtml?id=@id">
                        <h3>@title</h3>
                        <div class="image preserve-ratio" data-ratio="0.7" data-ratioM="0.5" style="background-image: url('@imageUrl')"></div>
                        <div class="description">@description</div>
                    </a>
                }
            }
        }
    </div>
</article>

<script>
    listType(getUrlParameters().type);

    function listType(type) {
        var filerSections = document.querySelectorAll(".grid-section.filter-type");

        if (type) {
            for (var i = 0; i < filerSections.length; i++) {
                filerSections[i].style.display = 'none';
            }

            document.querySelector(".grid-section.filter-type.type-" + type).style.display = "";
        }
        else {
            type = "all";

            for (var i = 0; i < filerSections.length; i++) {
                filerSections[i].style.display = '';
            }
        }


        var filterButtons = document.querySelectorAll(".filter a");

        for (var i = 0; i < filterButtons.length; i++) {
            if (filterButtons[i].dataset.type == type) {
                filterButtons[i].classList.add("active");
            }
            else if (filterButtons[i].classList.contains("active")) {
                filterButtons[i].classList.remove("active");
            }
        }
    }

    function getUrlParameters() {
        var query_string = {};
        var query = window.location.search.substring(1);
        var vars = query.split("&");

        for (var i = 0; i < vars.length; i++) {
            var pair = vars[i].split("=");

            if (typeof query_string[pair[0]] === "undefined")
                query_string[pair[0]] = decodeURIComponent(pair[1]);
            else if (typeof query_string[pair[0]] === "string") {
                var arr = [query_string[pair[0]], decodeURIComponent(pair[1])];
                query_string[pair[0]] = arr;
            }
            else
                query_string[pair[0]].push(decodeURIComponent(pair[1]));
        }
        return query_string;
    }
</script>